{"mappings":"ACEA,IAAM,EAAa,SAAS,gBAAgB,CAAC,eAkBxC,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAmB,CAAA,CAAA,OAAA,QAAA,CAAA,GAAnB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAA+B,CAA/B,IAAM,EAAN,EAAA,KAAA,CACG,EAAc,EAAU,YAAY,CAAC,MACrC,EAAgB,EAAU,YAAY,CAAC,QACvC,EAAQ,SAAS,aAAa,CAAC,SAE/B,EAAW,AArBA,SAAU,CAAa,EAGxC,IAAK,IAFD,EAAc,CAAa,CAAC,EAAE,CAAC,WAAW,GAErC,EAAI,EAAG,EAAI,EAAc,MAAM,CAAE,IAAK,CAC7C,GAAI,CAAa,CAAC,EAAE,GAAK,CAAa,CAAC,EAAE,CAAC,WAAW,GAAI,CACvD,GAAe,IAAM,CAAa,CAAC,EAAE,CAAC,WAAW,GAEjD,QACF,CAEA,GAAe,CAAa,CAAC,EAAE,AACjC,CAEA,OAAO,CACT,EAO8B,GAE5B,EAAM,SAAS,CAAC,GAAG,CAAC,eACpB,EAAM,YAAY,CAAC,MAAO,GAC1B,EAAM,WAAW,CAAG,EACpB,EAAU,MAAM,CAAC,GAEjB,EAAU,YAAY,CAAC,cAAe,EACxC,C,C,M,E,CAbK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar fieldTexts = document.querySelectorAll(\".field-text\");\nvar changeName = function changeName(nameCamelCase) {\n    var changedName = nameCamelCase[0].toUpperCase();\n    for(var i = 1; i < nameCamelCase.length; i++){\n        if (nameCamelCase[i] === nameCamelCase[i].toUpperCase()) {\n            changedName += \" \" + nameCamelCase[i].toLowerCase();\n            continue;\n        }\n        changedName += nameCamelCase[i];\n    }\n    return changedName;\n};\nvar _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\ntry {\n    for(var _iterator = fieldTexts[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n        var fieldText = _step.value;\n        var idFromField = fieldText.getAttribute(\"id\");\n        var nameFromField = fieldText.getAttribute(\"name\");\n        var label = document.createElement(\"label\");\n        var editName = changeName(nameFromField);\n        label.classList.add(\"field-label\");\n        label.setAttribute(\"for\", idFromField);\n        label.textContent = editName;\n        fieldText.before(label);\n        fieldText.setAttribute(\"placeholder\", editName);\n    }\n} catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n} finally{\n    try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n        }\n    } finally{\n        if (_didIteratorError) {\n            throw _iteratorError;\n        }\n    }\n}\n\n//# sourceMappingURL=index.e42176ef.js.map\n","'use strict';\n\nconst fieldTexts = document.querySelectorAll('.field-text');\n\nconst changeName = function (nameCamelCase) {\n  let changedName = nameCamelCase[0].toUpperCase();\n\n  for (let i = 1; i < nameCamelCase.length; i++) {\n    if (nameCamelCase[i] === nameCamelCase[i].toUpperCase()) {\n      changedName += ' ' + nameCamelCase[i].toLowerCase();\n\n      continue;\n    }\n\n    changedName += nameCamelCase[i];\n  }\n\n  return changedName;\n};\n\nfor (const fieldText of fieldTexts) {\n  const idFromField = fieldText.getAttribute('id');\n  const nameFromField = fieldText.getAttribute('name');\n  const label = document.createElement('label');\n\n  const editName = changeName(nameFromField);\n\n  label.classList.add('field-label');\n  label.setAttribute('for', idFromField);\n  label.textContent = editName;\n  fieldText.before(label);\n\n  fieldText.setAttribute('placeholder', editName);\n}\n"],"names":["fieldTexts","document","querySelectorAll","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","fieldText","value","idFromField","getAttribute","nameFromField","label","createElement","editName","changeName","nameCamelCase","changedName","toUpperCase","i","length","toLowerCase","classList","add","setAttribute","textContent","before","err","return"],"version":3,"file":"index.e42176ef.js.map"}